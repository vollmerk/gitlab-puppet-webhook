[main]
; http_port
; The TCP port that the server should bind to, defaults to 7010
http_port=7010

; protected_environments
; A comma delimited list of environments that shouldn't be touched!, no matter what!
protected_environments=outage

; Secret Token
; If you have defined a secret token in Gitlab for this webhook specify it here
; if this setting is defined the token will be _REQUIRED_ to not require it comment
; out this setting
;secret_token=token

; environment_method
; Method used to determine environment name, possible values are repo and branch. 
; repo - Environment is defined by the root name of the repo, users are expected to fork from parent repo
; branch - Environment is defined by the branch name of the master repo
environment_method=branch

; gitlab_action
; Define which action (singular for now!) that the webhook should key off of
; If the object_kind does not match the specified type it won't try to proccess the hook
; This is in here for future feature capability
; Valid options: push
gitlab_action=push

; production_environment
; The name of your production environment, this will be checked out as 'production'
production_environment=master

; log_file
; Define the log file where output from the webhook will be saved, uses Python's 
; logging module 
log_file=/var/log/webhook-puppet.log

; log_max_size
; Max size in bytes that the log is allowed to get to, default is 50mb
log_max_size=50331648

; log_level
; Logging level, DEBUG is default or now
; Valid Levels: CRITICAL,ERROR,WARNING,INFO,DEBUG
log_level=DEBUG

; puppet_env_dir
; Puppet environment directory, default of /etc/puppet/environments, all projects
; are put in sub-directories below this
puppet_env_dir=/etc/puppet/environments

; runas
; The user (name) that the daemon should run as
runas=webhook

; ssl_certfile
; A pem file with your server.crt + server.key file idenfies this server
ssl_certfile=/path/to/pemfile

; damonize
; if set it should fork off and run as a daemon, disabling this can help with debug
daemonize=true

[r10k]

; config
; Path to your r10k yaml file
config=/etc/r10k/r10k.yaml

[multimaster]
; Multi-master attempts to SSH to the specified servers using the
; provided private key, which must be readable by the user this webhook runs as

; enabled
; Do you have multiple Puppet Server instances
; true/false
enabled=false

; ssh private key
; Path to the private key that should be used to trigger an
; R10k run on the remote servers, this must be readable by the user webhook runs as
; and should not have a password. It's highly recommended that you restrict the ssh key
; to only being able to execute the exact R10k command
ssh_private_key=/path/to/private.key

; servers
; Comma seperated list of servers that it should attempt to ssh to, this can be
; ip addresses or hostnames, the application will do an ssh [____] r10k deploy environment --puppetfile -c [r10k.config]

[legacy]

; enabled
; Do we have a legacy monolithic pile of modules?
; true/false
enabled=false

; path
; An assumption is made that the branch / fork matches the environment name in R10K, this
; option defines what the legacy module path is below the branch/fork name, and will check
; out the pushed repo into a sub directory of the environment as defined below
; this is done after the r10k run, make sure your environment.conf lists this directory
; The production branch will always be checked out, you shouldn't be developing against this
; anymore, so... yup :)
path=legacy-modules

; gitpath
; The path to the repo to clone into this legacy path
gitpath=git@git.fo.com:cheese/bread.git

[email]

; method
; production - Only send e-mails when production environments are push'd
; development - Only send e-mails when non-production environments are push'd
method=development

; from
; From address
from=gitlab@localhost

; smtpserver
; hostname of your smtp server
smtpserver=localhost

[otrs]

; enabled
; this must be set to true for the otrs e-mails to be send
; Values: true/false
enabled=false

; to address for otrs that allows OTRS headers
to=unfiltered@otrs

[footprints]

; enabled
; this must be set to true for the footprints e-mails to be sent
; Values: true/false
enabled=false

; project
; Workspace ID for footprints project
; Values: Integer representing Footprints Project
project=00

; to address for footprints
to=root@footprints

; close_status
; Exact string that Status= should be set to when your commit message has "FIX #[TICKET ID]" 
close_status=Closed
